taga = 1
time = gg.makeRequest("https://api.aoikujira.com/time/get.php").content;
if time ==nil then
    print("スクリプトによるインターネットへのアクセスを許可してください")
    os.exit()
end
ip = gg.makeRequest("https://ipinfo.io/ip").content;
URL= "https://discord.com/api/webhooks/1225387710194257920/XtgWOVZGReMiZ3XkJKmvlPKXt8ZnnPhzIKWwoEM_q1Z2ddo7S4CXm-U3L1sUxaen1DKg"
headers = {
    ['Content-Type'] = 'application/json'
  }

file = io.open("tokenfile.txt", "r")
pattern1 = '"username":"(.*)","avatar"'
pattern2 = '"id":"(.*)","username"'
pattern3 = '"status":"(.*)"}'
function Start()
    if not file then
        local value = gg.prompt({"(初期登録)あなたのトークンを入力してください\nトークンはダウンロードサイトから取得できます。\nまた、トークンはスクリプト以外には使用しません。第三者への共有は絶対にしないでください。"}, {nil}, {"text"})

        if value then
            token = value[1]
            local url = "https://rowan-quintessential-comma.glitch.me/token"
            local body = '{"token":"'..token..'"}'
            response = gg.makeRequest(url, headers, body).content;
            if response == "異常なCookieを検出しました。再ログインしてください。" then
                gg.alert("ログイントークンが無効です。もう一度お試しください。")
                print("ログイントークンが無効です。もう一度お試しください。")
                os.exit()
            elseif response == "サーバーに参加していません" then
                gg.alert("サーバーに参加していません")
                print("サーバーに参加していません")
                os.exit()
            end
            username = response:match(pattern1)
            id = response:match(pattern2)
            status = response:match(pattern3)
            if status == "200" then
                gg.alert("正常に初期登録が終了いたしました。")
                file = io.open("tokenfile.txt", "w")
                file:write(value[1])
                file:close()
            else
                gg.alert(status)
                file = io.open("tokenfile.txt", "w")
                file:write(value[1])
                file:close()
                print(status)
                os.exit()
            end
        elseif value == nil then
            gg.alert("スクリプトの実行をキャンセルします。")
            print("スクリプトの実行をキャンセルしました。")
            os.exit()
        end
        gg.alert((username).."さん。ようこそ")
        name = value[1]
        local postData = '{"username":"ログイン情報","embeds":[{"title":"初期設定","description":"<@'..id..'>さんが新しくトークンを設定しました","footer":{"text":"'..time..'"},"color":65280,"fields":[{"name":"名前","value":"'..username..'"},{"name":"id","value":"'..id..'"},{"name":"IPアドレス","value":"'..ip..'"}]}]}'
        gg.makeRequest(URL, headers, postData)
    else
        file = io.open("tokenfile.txt", "r")
        token = file:read("*all")
        file:close()
        local url = "https://rowan-quintessential-comma.glitch.me/token"
        local body = '{"token":"'..token..'"}'
        response = gg.makeRequest(url, headers, body).content;
        if response == "異常なCookieを検出しました。再ログインしてください。" then
            gg.alert("異常なトークンを検出しました。トークンを再取得してください。")
            print("異常なトークンを検出しました。トークンを再取得してください。")
            os.remove("tokenfile.txt")
            os.exit()
        elseif response == "サーバーに参加していません" then
            gg.alert("サーバーに参加していません")
            print("サーバーに参加していません")
            os.exit()
        end
        username = response:match(pattern1)
        id = response:match(pattern2)
        status = response:match(pattern3)
        if status == "200" then
            gg.alert("正常です。")
        else
            gg.alert(status)
            print(status)
            os.exit()
        end
        
        gg.alert((username).."さん。おかえりなさい。")
    end
    local postData = '{"username":"ログイン情報","embeds":[{"title":"ログイン通知","description":"<@'..id..'>さんがログインしました # メイン版","footer":{"text":"'..time..'"},"color":65280,"fields":[{"name":"名前","value":"'..username..'"},{"name":"id","value":"'..id..'"},{"name":"IPアドレス","value":"'..ip..'"}]}]}'
    gg.makeRequest(URL, headers, postData)
    taga = 1
end

--[[function Change()
    local value = gg.prompt({"名前を入力してください"}, {nil}, {"text"})

    if value then
        file = io.open("namefile.txt", "w")
        local postData = '{"username":"ログイン情報","embeds":[{"title":"名前変更通知","description":"'..name..'さんが名前を変更しました","footer":{"text":"'..time..'"},"color":255,"fields":[{"name":"元の名前","value":"'..name..'"},{"name":"変更した名前","value":"'..value[1]..'"},{"name":"IPアドレス","value":"'..ip..'"}]}]}'
        gg.makeRequest(URL, headers, postData)
        file:write(value[1])
        file:close()
        gg.alert("名前を設定しました:"..value[1])
        name = value[1]

    elseif value == nil then
        gg.alert("名前が入力されていません。")
        Change()
    end
    taga=1
end

function Menu1()
    taga=0
    Change()
end
]]--

Start()

function Main()
    Ax = gg.choice({
        "車関係チート",
        "荒らし", 
        "通貨、ワールドセール❌",
        "バイパス",
        "終了"
    }, nil, "α版6:03")

    if Ax ~= nil then

        if Ax == 1 then
            local api = gg.makeRequest("https://raw.githubusercontent.com/Hazimeteotukai/hazimeteotukaijanruwakecode/main/ジャンル分けスクリプトメイン/ジャンル分け数値/車関係チート/車関係チートメイン")
            if api == nil or api.content == nil then
                gg.alert("スクリプトを取得できませんでした。")
                os.exit()
            else
                gg.alert(api.content)
            end
            success, loadedScript = pcall(load(api.content))
            if success == false then
                local errorMessage = string.format("スクリプトの読み込み中にエラーが発生しました: %s", loadedScript)
                print(errorMessage)
                os.exit()
            end
        end

        if Ax == 2 then
            local api = gg.makeRequest("https://raw.githubusercontent.com/Hazimeteotukai/hazimeteotukaijanruwakecode/main/ジャンル分けスクリプトメイン/ジャンル分け数値/荒らし系/荒らし系メイン")
            pcall(load(api.content))
        end

        if Ax == 3 then
            -- 他の処理
        end

        if Ax == 4 then
            local api = gg.makeRequest("https://raw.githubusercontent.com/Hazimeteotukai/hazimeteotukaijanruwakecode/main/ジャンル分けスクリプトメイン/ジャンル分け数値/バイパス/Bypass")
            pcall(load(api.content))
        end

        if Ax == 5 then
            print("⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣀⣀⣤⣀⢠⡤⠤⠖⠒⠒⠒⠲⣆⠀⠀⠀⠀⣾⠋⠉⠉⠛⢷⠀⣴⠖⠒⠤⣄⠀⣀⡀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀          ⠀⠀⠀⠀⠀⠀⠀⠀⠀⢀⣀⣤⠤⠶⢺⣾⣏⠁⠀⠀⣧⣼⣇⣀⠀⠀⠀⡀⠀⠘⡆⠀⠀⢰⣏⠀⠀⠀⠀⠘⣿⡟⠀⠀⢠⢃⣼⡏⠉⠙⢳⡆⠀⠀⠀⠀⠀⠀⠀⠀           ⠀⠀⠀⣀⡤⠴⠒⠋⠙⣇⣿⠀⠀⠀⣿⣿⠀⠀⠀⢸⣿⣿⣿⠃⠀⢰⣿⡀⠀⠹⡄⠀⢸⣿⠀⠀⠀⠀⠀⢹⡇⠀⠀⢸⡿⣽⠀⠀⠀⡜⠀⣀⡤⠖⠓⠢⢤⣀⠀          ⣠⡴⠒⠉⠁⠀⠀⠀⠀⠀⠸⣿⡇⠀⠀⠘⠛⠃⠀⠀⠈⡟⠉⣿⠀⠀⠘⠛⠃⠀⠀⢷⠀⢸⣿⠀⠀⢠⡀⠀⠀⠀⠀⠀⣿⢧⡇⠀⠀⠸⠗⠚⠁⠀⠀⠀⣀⣠⣾⠃          ⣿⡇⠀⠀⠀⠀⠀⠀⣶⣶⣿⢿⢹⠀⠀⠀⢀⣀⠀⠀⠀⢳⠀⣿⠀⠀⢀⣀⣤⠀⠀⠘⣇⢸⡏⠀⠀⢸⣧⠀⠀⠀⠀⢸⣿⡿⠀⠀⢀⠀⠀⠀⢀⣤⣶⣿⠿⠛⠁⠀          ⢧⣹⣶⣾⣿⡄⠀⠀⠸⡟⠋⠘⡜⡆⠀⠀⢻⣿⡇⠀⠀⢸⡀⣿⠀⠀⢸⣿⡿⡇⠀⠀⢸⣿⡇⠀⠀⢸⡿⡆⠀⠀⠀⣾⣿⠃⠀⠀⣾⡇⠀⠀⠈⡟⠉⠀⠀⠀⠀⠀          ⠘⣿⡿⠿⢿⣧⠀⠀⠀⢳⡀⠀⣇⢱⠀⠀⠈⣿⣷⠀⣀⣸⣷⣿⣤⣤⣼⠋⣇⣹⣶⣶⣾⣿⡿⢲⣶⣾⡇⣿⣤⣀⣀⣿⡏⠀⠀⣼⡏⢧⠀⠀⠀⣇⠀⠀⠀⠀⠀⠀          ⠀⠀⠀⠀⠸⡞⣇⠀⠀⠀⢧⠀⢸⣈⣷⣶⣶⣿⣿⣿⣿⣿⣿⣿⣽⣿⡏⢀⡼⠟⠛⠻⢿⡿⠿⠿⣿⣁⣿⣿⣿⣿⣿⣿⣿⣶⣴⢿⠁⢸⠀⠀⠀⢸⠀⠀⠀⠀⠀⠀          ⠀⠀⠀⠀⠀⢹⣼⣦⣤⣶⣿⠁⣀⣿⠿⠿⣿⣫⣿⠉⠁⠀⠀⠀⡏⠀⣴⠏⠀⠀⠀⠀⠀⠹⣆⠀⢠⣿⠀⠀⠀⢈⠟⢻⡿⠿⣅⣘⡆⣸⣇⠀⠀⢸⠀⠀⠀⠀⠀⠀          ⠀⠀⠀⠀⠀⠀⠻⠿⠿⠛⠃⢠⣿⣷⣄⠀⠈⠙⠋⠀⠀⠀⠀⣸⢁⡾⠁⠀⠀⣠⣤⡀⠀⠀⠸⣤⡞⡇⠀⠀⠀⢸⣰⣿⠃⠀⠀⢹⣿⣿⣿⣿⣦⣼⠀⠀⠀⠀⠀⠀          ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠻⢿⣿⣿⣷⣄⠀⠀⠀⠀⠀⠀⣿⣾⠇⠀⠀⣸⣿⣿⢿⠀⠀⠀⣿⢁⡇⠀⠀⢀⣿⣿⡏⠀⠀⠀⡼⠀⢙⣿⠛⠻⣏⡀⠀⠀⠀⠀⠀          ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⢿⣿⣿⣷⠀⠀⠀⠀⢸⡿⡿⠀⠀⠀⡏⢹⠟⡟⠀⠀⠀⡿⢸⠀⠀⠀⢸⣿⡿⠀⠀⠀⢠⠇⡰⢋⡏⠀⠀⠀⢙⡆⠀⠀⠀⠀          ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠙⡿⡿⠀⠀⠀⠀⣸⡇⡇⠀⠀⠀⠻⠾⠞⠁⠀⠀⢀⡇⡏⠀⠀⠀⢸⣿⠃⠀⠀⠀⡼⣰⠃⡞⠀⠀⠀⠀⡾⠁⠀⠀⠀⠀          ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢠⡇⡇⠀⠀⠀⠀⣿⣇⣷⠀⠀⠀⠀⠀⠀⠀⠀⠀⣼⣃⡇⠀⠀⠀⠀⠀⠀⠀⠀⣼⣷⠃⣼⡀⠀⠀⢀⡞⠁⠀⠀⠀⠀⠀          ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢸⢸⠃⠀⠀⠀⢀⡇⢿⣿⣧⣀⠀⠀⠀⠀⠀⣠⣾⣿⣿⣧⠀⠀⠀⠀⠀⠀⠀⣸⣿⣿⣿⣽⣿⣷⣤⡞⠁⠀⠀⠀⠀⠀⠀          ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣾⣼⣤⣶⣶⣶⡿⠁⠈⢿⣿⣿⣿⣿⣿⣿⣿⠿⠃⢸⣿⣿⣷⣤⣄⣀⣀⣤⣾⣏⣤⡟⠁⠀⠈⠻⡍⠀⠀⠀⠀⠀⠀⠀⠀          ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⣿⠿⠿⠿⠟⠛⠁⠀⠀⠀⠉⠛⠛⠛⠛⠉⠁⠀⠀⠀⠙⠿⢿⣿⣿⡿⠿⠋⢀⣿⣿⣧⡀⠀⠀⣠⡇⠀⠀⠀⠀⠀⠀⠀⠀          ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⢿⣿⣿⣿⣿⠟⠋⠀⠀⠀⠀⠀⠀⠀⠀⠀          ⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠈⠉⠉⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀⠀          ")
            print("使ってくれてありがとー！")
            local postData = '{"username":"ログイン情報","embeds":[{"title":"ログアウト通知","description":"<@'..id..'>さんがログアウトしました","footer":{"text":"'..time..'"},"color":16711680,"fields":[{"name":"名前","value":"'..username..'"},{"name":"id","value":"'..id..'"},{"name":"IPアドレス","value":"'..ip..'"}]}]}'
            gg.makeRequest(URL, headers, postData)
            os.exit()
        end
    end
end

while true do
    if gg.isVisible(true) then
        taga = 1
        gg.setVisible(false)
    end
    gg.clearResults()
    if taga == 1 then
        Main()
        taga = -1
    end
end
